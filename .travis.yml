language: node_js
node_js:
  - 16

services:
  - docker

# Pre-testing installs
install:
  - echo "nothing needs to be installed"

# Scripts to be run such as tests
before_script:
  - echo "no tests"

script:
  - docker --version # print the version for logging
#BUILDING udagram-api-feed
  - echo "BUILDING udagram-api-feed"
  - docker build -t udagram-api-feed ./udagram-api-feed
  - docker tag udagram-api-feed adamlamri/udagram-api-feed:v1
  - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
  - docker push adamlamri/udagram-api-feed:v1
#BUILDING udagram-api-user
  - echo "BUILDING udagram-api-user"
  - docker build -t udagram-api-user ./udagram-api-user
  - docker tag udagram-api-user adamlamri/udagram-api-user:v1
  - docker push adamlamri/udagram-api-user:v1
#BUILDING udagram-frontend
  - echo "BUILDING udagram-frontend"
  - docker build -t udagram-frontend ./udagram-frontend
  - docker tag udagram-frontend adamlamri/udagram-frontend:v1
  - docker push adamlamri/udagram-frontend:v1
#BUILDING reverseproxy
  - echo "BUILDING reverseproxy"
  - docker build -t reverseproxy ./udagram-reverseproxy
  - docker tag reverseproxy adamlamri/reverseproxy:v1
  - docker push adamlamri/reverseproxy:v1

# Tasks to perform after the process is successful. Formatting the Docker username and password as below enables you to programmatically log in without having the password exposed in logs.
after_success:
  - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
  - docker push YOUR_DOCKER_HUB/simple-node